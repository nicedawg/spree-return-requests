<div data-hook="customer_return_authorization_form_fields">
  <table class="index">
    <thead>
      <tr data-hook="rma_header">
        <th><%= Spree.t(:product) %></th>
        <th class="units-shipped"><%= Spree.t(:quantity_shipped) %></th>
        <th class="units-authorized-for-return"><%= Spree.t(:quantity_authorized_for_return) %></th>
        <th class="units-returned"><%= Spree.t(:quantity_returned) %></th>
        <th class="return_quantity"><%= Spree.t(:return_quantity) %></th>
        <th><%= Spree.t(:return_reason) %></th>
        <th><%= Spree.t(:return_comments) %></th>
      </tr>
    </thead>
    <tbody>
      <% @return_authorization.order.shipments.shipped.collect{|s| s.inventory_units.to_a}.flatten.group_by(&:variant).each do | variant, units| %>
        <% return_info = @return_authorization.get_return_info_for_variant(variant) %>
        <tr id="<%= dom_id(variant) %>" data-hook="rma_row" class="<%= cycle('odd', 'even')%>">
          <td>
            <div class="variant-name"><%= variant.name %></div>
            <div class="variant-options"><%= variant.options_text %></div>
          </td>
          <td class="align-center units-shipped"><%= units.select(&:shipped?).size %></td>
          <td class="align-center units-authorized-for-return"><%= units.select(&:authorized_for_return?).size %></td>
          <td class="align-center units-returned"><%= units.select(&:returned?).size %></td>
          <td class="return_quantity align-center">
            <% if @return_authorization.received? %>
              <%= @return_authorization.inventory_units.group_by(&:variant)[variant].try(:size) || 0 %>
            <% elsif units.select(&:shipped?).empty? %>
              0
            <% else %>
              <%= number_field_tag "return_quantity[#{variant.id}]",
                @return_authorization.inventory_units.group_by(&:variant)[variant].try(:size) || 0, {:style => 'width:100px;', :min => 0} %>
            <% end %>
          </td>
          <td class="return_reason">
            <%= select_tag "return_reason[#{variant.id}]", options_for_select(SpreeReturnRequests::Config[:return_request_reasons].lines + ["Other"], params[:return_reason] ? params[:return_reason][variant.id.to_s] : nil), include_blank: true %> <br>
          </td>
          <td class="return_comments">
            <%= text_area_tag "return_comments[#{variant.id}]", params[:return_comments] ? params[:return_comments][variant.id.to_s] : '' %>
          </td>
        </tr>
      <% end %>
    </tbody>
    <tfoot>
      <tr>
        <td colspan="6" style="text-align: right;">RMA Amount</td>
        <td class="align-right">
          <span id="rma_value">$0.00</span>
        </td>
      </tr>
    </tfoot>
  </table>


  <% if @return_authorization.other_authorized_requests.any? %>
    <%= f.field_container :other_authorized_requests do %>
      <p class="other-authorized-requests-intro-text">Here are links to other authorized Return Requests related to this order:</p>
      <ul>
        <% @return_authorization.other_authorized_requests.each do |return_auth| %>
          <li><%= link_to return_auth.number, labels_return_authorization_path(return_auth.number, token: return_auth.order_token), class: 'return-label-link', target: :_blank %></li>
        <% end %>
      </ul>
    <% end %>
  <% end %>
</div>

<script>
  var line_item_prices = {};
  <% @return_authorization.order.line_items.group_by(&:variant).each do |variant, items| %>
    line_item_prices[<%= variant.id.to_s %>] = <%= items.first.inventory_units.first.price_after_discounts %>;
  <% end %>

  $(document).ready(function(){
    var rma_amount = 0;
    $("td.return_quantity input").on('change', function() {
      var rma_amount = 0;
      $.each($("td.return_quantity input"), function(i, input) {

        // if input isn't an integer, then make it 0
        if ($(input).val() != parseInt($(input).val(), 10)) {
          $(input).val(0);
        }

        // don't allow user to specify too high of a return
        var units_shipped = $(input).parents("tr").find(".units-shipped").html();
        var units_returned = $(input).parents("tr").find(".units-returned").html();
        var units_authorized_for_return = $(input).parents("tr").find(".units-authorized-for-return").html();
        var units_allowed = units_shipped - units_returned - units_authorized_for_return;
        if ($(input).val() > units_allowed) {
          $(input).val(units_allowed);
        }

        var variant_id = $(input).prop('id').replace("return_quantity_", "");
         rma_amount += line_item_prices[variant_id] * $(input).val()
      });

      if(!isNaN(rma_amount)){
        $("span#rma_value").html('$' + rma_amount.toFixed(2));
      }
    })
  });
</script>
